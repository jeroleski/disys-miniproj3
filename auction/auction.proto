// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative auction/auction.proto
syntax = "proto3";

option go_package = "../auction";

package auction;

service AuctionService {
    rpc MakeBid (Bid) returns (Response) {};
    rpc GetStreamHighestbid (Request) returns (stream Bid) {};
    rpc Result (Void) returns (Bid) {};
    rpc GetStreamTimeleft (Request) returns (stream Time) {};
    rpc ServerBackup(Backup) returns (Void) {};
}

message Void {
}

message Request {
    string User = 1;
}

message Bid {
    string User = 1;
    int32 Amount = 2;
}

message Response {
    string Ack = 1;
}

message Time {
    string Msg = 1;
}

message Backup{
    repeated string ConnectedUsers = 1;
    int32 HighestBidAmount = 2;
    string HighestBidUser = 3;
    int64 TimeLeft = 4;
}
